const express = require("express");
const router = express.Router();
const Entry = require("../models/entrySchema");
const authenticate = require("../middleware/authenticate"); // ‚úÖ —Ç–≤–æ–π middleware
const { encryptText, decryptText } = require("../services/kmsService"); // –µ—Å–ª–∏ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å KMS

// üì• POST /api/entries ‚Äî —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å
router.post("/", authenticate, async (req, res) => {
  try {
    const { title, content } = req.body;
    const userId = req.user.sub; // ‚úÖ –≤–∑—è–ª–∏ userId –∏–∑ —Ç–æ–∫–µ–Ω–∞ Cognito

    if (!title || !content) {
      return res.status(400).json({ message: "Missing fields" });
    }

    // –µ—Å–ª–∏ —Ç—ã —à–∏—Ñ—Ä—É–µ—à—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ‚Äî –∑–∞—à–∏—Ñ—Ä—É–π
    const encryptedContent = await encryptText(content);

    const newEntry = new Entry({
      userId,
      title,
      content: encryptedContent,
    });

    await newEntry.save();

    res.status(201).json({ message: "–ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞" });
  } catch (err) {
    console.error("‚ùå Error saving entry:", err);
    res.status(500).json({ message: "Server error", error: err.message });
  }
});

module.exports = router;
